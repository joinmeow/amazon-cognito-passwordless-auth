name: Publish Client Package to npm

on:
  workflow_dispatch:
    inputs:
      version_bump:
        description: "Version increment type (patch, minor, major)"
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
      release_notes:
        description: "Release notes (markdown supported)"
        required: false
        type: string

permissions:
  contents: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          registry-url: https://registry.npmjs.org/
      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      - run: npm ci
      - name: Update package version
        id: version
        run: |
          # Get the current version before bumping
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

          # Update the version according to the bump type
          npm version ${{ github.event.inputs.version_bump }} --no-git-tag-version

          # Get the new version after bumping
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "New version: $NEW_VERSION"

          # Set the output for later steps
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
      - name: Commit and push changes
        run: |
          git add package.json package-lock.json
          git commit -m "Bump version from ${{ steps.version.outputs.current_version }} to ${{ steps.version.outputs.new_version }}"
          git tag v${{ steps.version.outputs.new_version }}
          git push
          git push --tags
      - run: npm run dist
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.new_version }}
          name: v${{ steps.version.outputs.new_version }}
          body: |
            ## What's Changed
            ${{ github.event.inputs.release_notes || 'Version ' }}${{ steps.version.outputs.new_version }} (${{ github.event.inputs.version_bump }} release)

            ### Changes since v${{ steps.version.outputs.current_version }}

            To install this version:
            ```bash
            npm install @joinmeow/cognito-passwordless-auth@${{ steps.version.outputs.new_version }}
            ```
          draft: false
          prerelease: false
          generate_release_notes: ${{ github.event.inputs.release_notes == '' }}
          token: ${{ secrets.GITHUB_TOKEN }}
